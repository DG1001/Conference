package de.xares.conference.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TalkAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTalkAllPropertiesEquals(Talk expected, Talk actual) {
        assertTalkAutoGeneratedPropertiesEquals(expected, actual);
        assertTalkAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTalkAllUpdatablePropertiesEquals(Talk expected, Talk actual) {
        assertTalkUpdatableFieldsEquals(expected, actual);
        assertTalkUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTalkAutoGeneratedPropertiesEquals(Talk expected, Talk actual) {
        assertThat(actual)
            .as("Verify Talk auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTalkUpdatableFieldsEquals(Talk expected, Talk actual) {
        assertThat(actual)
            .as("Verify Talk relevant properties")
            .satisfies(a -> assertThat(a.getTitle()).as("check title").isEqualTo(expected.getTitle()))
            .satisfies(a -> assertThat(a.getSpeaker()).as("check speaker").isEqualTo(expected.getSpeaker()))
            .satisfies(a -> assertThat(a.getAbstractText()).as("check abstractText").isEqualTo(expected.getAbstractText()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTalkUpdatableRelationshipsEquals(Talk expected, Talk actual) {
        assertThat(actual)
            .as("Verify Talk relationships")
            .satisfies(a -> assertThat(a.getRoom()).as("check room").isEqualTo(expected.getRoom()))
            .satisfies(a -> assertThat(a.getTimeslot()).as("check timeslot").isEqualTo(expected.getTimeslot()));
    }
}
